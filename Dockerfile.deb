# Instructions how to build:
# 1. Build with `docker build -t python-backend:latest -f Dockerfile.deb .`
# 2. Run with `docker run -p 5000:5000 -d python-backend`
# TODO image size is 2GB - reduce size possible?
# FIXME Add 'USER ' line to the Dockerfile (Trivy)
# Start with the latest base Debian 11 slim image
# https://hub.docker.com/_/debian/tags?page=1&name=11
# Set image to architecture Linux/AMD64 via sha256
FROM debian:11.8-slim@sha256:d66e51af682be02ff054f86dc0c07366c0a40c6de3d8f1c731de3c633da56847

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# Disable interactive mode
ARG DEBIAN_FRONTEND=noninteractive

# Update the package lists and install necessary dependencies
RUN set -ex && apt-get update && apt-get install --no-install-recommends -y \
    apt-transport-https \
    ca-certificates \
    curl \
    gnupg \
    lsb-release \
    && \
    rm -rf /var/lib/apt/lists/*

# Add the deadsnakes PPA
RUN echo "deb http://ppa.launchpad.net/deadsnakes/ppa/ubuntu focal main" | tee /etc/apt/sources.list.d/focal.list
RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys F23C5A6CF475977595C89F51BA6932366A755776

# Update the package lists and install Python 3.11, pip and venv
RUN set -ex && apt-get update && apt-get install --no-install-recommends -y \
    python3.11 \
    python3-pip \
    python3.11-venv \
    && \
    rm -rf /var/lib/apt/lists/*

# Create a Python virtual environment and activate it
RUN python3.11 -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Install setuptools
RUN /opt/venv/bin/pip install setuptools

# Install your application's dependencies
WORKDIR /opt/copilot/backend
COPY backend/requirements.txt ./
RUN /opt/venv/bin/pip install --no-cache-dir -r requirements.txt

# Copy your application into the Docker image
WORKDIR /opt/copilot
COPY . .

# Install Node.js and npm
RUN curl -sL https://deb.nodesource.com/setup_18.x | bash -

# Install concurrently
# https://www.npmjs.com/package/concurrently
ARG CONCURRENTLY_VERSION=8.2.2
RUN set -x && apt-get update && apt-get install --no-install-recommends -y \
    nodejs \
    && \
    npm install -g concurrently@${CONCURRENTLY_VERSION} && \
    npm cache clean --force

# Install your Vue.js application's dependencies
WORKDIR /opt/copilot
RUN npm install

# Expose ports
EXPOSE 5000 5173

# Run your application
#CMD ["sh", "-c", "cd backend && python copilot.py & cd /opt/copilot && npm run dev"]
CMD ["sh", "-c", "cd /opt/copilot && npm run start"]
